"use strict";function RangeChanges(){throw Error("Can't construct. RangeChanges is a mixin.")}var WeakMap=require("weak-map"),Dict=require("../dict"),rangeChangeDescriptors=new WeakMap;module.exports=RangeChanges,RangeChanges.prototype.getAllRangeChangeDescriptors=function(){return rangeChangeDescriptors.has(this)||rangeChangeDescriptors.set(this,Dict()),rangeChangeDescriptors.get(this)},RangeChanges.prototype.getRangeChangeDescriptor=function(e){var t=this.getAllRangeChangeDescriptors();return e=e||"",t.has(e)||t.set(e,{isActive:!1,changeListeners:[],willChangeListeners:[]}),t.get(e)},RangeChanges.prototype.addRangeChangeListener=function(e,t,r){!this.isObservable&&this.makeObservable&&this.makeObservable();var n,i=this.getRangeChangeDescriptor(t);n=r?i.willChangeListeners:i.changeListeners,n.push(e),Object.defineProperty(this,"dispatchesRangeChanges",{value:!0,writable:!0,configurable:!0,enumerable:!1});var a=this;return function(){a&&(a.removeRangeChangeListener(e,t,r),a=null)}},RangeChanges.prototype.removeRangeChangeListener=function(e,t,r){var n,i=this.getRangeChangeDescriptor(t);n=r?i.willChangeListeners:i.changeListeners;var a=n.lastIndexOf(e);if(-1===a)throw Error("Can't remove listener: does not exist.");n.splice(a,1)},RangeChanges.prototype.dispatchRangeChange=function(e,t,r,n){var i=this.getAllRangeChangeDescriptors(),a="Range"+(n?"WillChange":"Change");i.forEach(function(i,o){if(!i.isActive){i.isActive=!0;var s;s=n?i.willChangeListeners:i.changeListeners;var p="handle"+(o.slice(0,1).toUpperCase()+o.slice(1))+a;try{s.forEach(function(i){if(i[p])i[p](e,t,r,this,n);else{if(!i.call)throw Error("Handler "+i+" has no method "+p+" and is not callable");i.call(this,e,t,r,this,n)}},this)}finally{i.isActive=!1}}},this)},RangeChanges.prototype.addBeforeRangeChangeListener=function(e,t){return this.addRangeChangeListener(e,t,!0)},RangeChanges.prototype.removeBeforeRangeChangeListener=function(e,t){return this.removeRangeChangeListener(e,t,!0)},RangeChanges.prototype.dispatchBeforeRangeChange=function(e,t,r){return this.dispatchRangeChange(e,t,r,!0)};